name: Create Release

on:
  push:
    branches:
      - master

jobs:
  restore:
    runs-on: ubuntu-latest
    steps:

      - name: Create Release
        id: create_release
        uses: actions/create-release@latest
        env:
          GITHUB_TOKEN: ${{ secrets.FTOKEN }}
        with:
          tag_name: v${{ github.run_number }}
          release_name: Release v${{ github.run_number }}
          draft: false
          prerelease: false

      - name: File Restorer
        env:
          GITHUB_TOKEN: ${{ secrets.FTOKEN }}
          UPLOAD_URL: ${{ steps.create_release.outputs.upload_url }}
        run: |
          pip install -q tqdm
          git clone --filter=blob:none --no-checkout --depth 1 https://github.com/intlect/FileStore.git
          cd FileStore
          DIRS=$(git ls-tree -d HEAD | awk '{print $4}' | grep -v github)
          cd .. && rm -rf FileStore

          for dir in $DIRS; do
              echo $dir
              git clone --filter=blob:none --no-checkout --depth 1 https://github.com/intlect/FileStore.git
              cd FileStore
              git sparse-checkout init --cone
              git sparse-checkout set $dir
              git checkout
              if [[ "$dir" == *mkv* ]]; then
                  ext="mkv"
                  python main.py restore --file "../$dir.mkv" --dir "$dir" >/dev/null
              else
                  ext="mp4"
                  python main.py restore --file "../$dir.mp4" --dir "$dir" >/dev/null
              fi
              cd .. && rm -rf FileStore
              
              FILE="$dir.$ext"
              FILENAME=$(basename $FILE)
              CONTENT_TYPE=$(file --mime-type -b $FILE)
              FILE_UPLOAD_URL="${UPLOAD_URL/\{\?name,label\}/?name=$(basename "$FILE")}"

              curl -s \
                -H "Authorization: token $GITHUB_TOKEN" \
                -H "Content-Type: $CONTENT_TYPE" \
                --upload-file "$FILE" \
                "${FILE_UPLOAD_URL}"
              rm -rf $FILE
          done
